<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>HashMap（一）</title>
    <url>/2021/05/13/HashMap%EF%BC%88%E4%B8%80%EF%BC%89/</url>
    <content><![CDATA[<p>基于 <em>jkd1.8</em> 源码认识 HashMap。包含以下内容：</p>
<ol>
<li>扰动函数</li>
<li>初始化容量</li>
<li>负载因子</li>
</ol>
<span id="more"></span>

<h2 id="扰动函数"><a href="#扰动函数" class="headerlink" title="扰动函数"></a>扰动函数</h2><p>在 HashMap 存放元素时候有这样一段代码来处理哈希值，用于优化散列效果：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> <span class="title">hash</span><span class="params">(Object key)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> h;</span><br><span class="line">    <span class="keyword">return</span> (key == <span class="keyword">null</span>) ? <span class="number">0</span> : (h = key.hashCode()) ^ (h &gt;&gt;&gt; <span class="number">16</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="1-运算符"><a href="#1-运算符" class="headerlink" title="1.运算符"></a>1.运算符</h3><ul>
<li>&gt;&gt;&gt;：无符号右移。无论是正数还是负数，高位通通补0；</li>
<li>^：异或运算符。相同为 0，不同为 1；</li>
<li>&amp;：与运算符。同为 1 时才为 1，否则为 0。</li>
</ul>
<h3 id="2-元素在数组中的位置"><a href="#2-元素在数组中的位置" class="headerlink" title="2.元素在数组中的位置"></a>2.元素在数组中的位置</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 找到元素在数组中的位置，n为数组长度。</span></span><br><span class="line">i = (n - <span class="number">1</span>) &amp; hash</span><br></pre></td></tr></table></figure>

<h3 id="3-为什么-HashMap-数组的长度-n-要是2的整数幂"><a href="#3-为什么-HashMap-数组的长度-n-要是2的整数幂" class="headerlink" title="3.为什么 HashMap 数组的长度 n 要是2的整数幂"></a>3.为什么 HashMap 数组的长度 n 要是2的整数幂</h3><p>为使 hash 值散列分布在数组的下标当中。</p>
<p>假设我们有一个长度为16的数组，则他的下标范围为 0~15。而任何一个2的整数幂，减1得到的二进制位全部是1。让 hash 值与其就行与运算，结果将保留 hash 值小于数组下标范围的低位。当 hash 足够散列时，得到的结果必为在数组下标内散列的值。</p>
<figure class="highlight dns"><table><tr><td class="code"><pre><span class="line">    <span class="number">00100100</span> <span class="number">10100101</span> <span class="number">11000100</span> <span class="number">00100101</span>    // Hash值</span><br><span class="line">&amp;   <span class="number">00000000</span> <span class="number">00000000</span> <span class="number">00000000</span> <span class="number">00001111</span>    // <span class="number">16</span> - <span class="number">1</span> = <span class="number">15</span></span><br><span class="line">----------------------------------</span><br><span class="line">    <span class="number">00000000</span> <span class="number">00000000</span> <span class="number">00000000</span> <span class="number">00000101</span>    // 高位全部归零，只保留末四位。</span><br></pre></td></tr></table></figure>

<h3 id="4-扰动函数里为何无符号右移16位"><a href="#4-扰动函数里为何无符号右移16位" class="headerlink" title="4.扰动函数里为何无符号右移16位"></a>4.扰动函数里为何无符号右移16位</h3><p>为使 hash 值的高位也能影响到该元素在数组中的位置，提高散列性。</p>
<p>因为获取元素在数组中的位置时取的是 hash 值在数组下标范围内的低位，则将Hash值的高16位右移并与原Hash值取异或运算（^），混合高16位和低16位的值，会得到一个更加散列的低16位的Hash值。</p>
<h2 id="初始化容量"><a href="#初始化容量" class="headerlink" title="初始化容量"></a>初始化容量</h2><p>在 HashMap 的初始化中，有这样一段方法：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">HashMap</span><span class="params">(<span class="keyword">int</span> initialCapacity, <span class="keyword">float</span> loadFactor)</span> </span>&#123;</span><br><span class="line">        ...</span><br><span class="line">        <span class="keyword">this</span>.loadFactor = loadFactor;</span><br><span class="line">        <span class="keyword">this</span>.threshold = tableSizeFor(initialCapacity);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>其中 <em>threshold</em> 的取值为比 <em>initialCapacity</em> 大的最小2的整数幂：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> <span class="title">tableSizeFor</span><span class="params">(<span class="keyword">int</span> cap)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n = cap - <span class="number">1</span>;</span><br><span class="line">    n |= n &gt;&gt;&gt; <span class="number">1</span>;</span><br><span class="line">    n |= n &gt;&gt;&gt; <span class="number">2</span>;</span><br><span class="line">    n |= n &gt;&gt;&gt; <span class="number">4</span>;</span><br><span class="line">    n |= n &gt;&gt;&gt; <span class="number">8</span>;</span><br><span class="line">    n |= n &gt;&gt;&gt; <span class="number">16</span>;</span><br><span class="line">    <span class="keyword">return</span> (n &lt; <span class="number">0</span>) ? <span class="number">1</span> : (n &gt;= MAXIMUM_CAPACITY) ? MAXIMUM_CAPACITY : n + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="负载因子"><a href="#负载因子" class="headerlink" title="负载因子"></a>负载因子</h2><p>负载因子决定了数据量达到多少了以后，hashmap 会进行扩容，默认值为 0.75。</p>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>HashMap</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL调优（一）未完成</title>
    <url>/2021/05/14/MySQL%E8%B0%83%E4%BC%98%EF%BC%88%E4%B8%80%EF%BC%89/</url>
    <content><![CDATA[<h2 id="Server-处理-Client-的请求过程"><a href="#Server-处理-Client-的请求过程" class="headerlink" title="Server 处理 Client 的请求过程"></a>Server 处理 Client 的请求过程</h2><p><img src="https://raw.githubusercontent.com/xyq-material/image/master/blog/20210514091718.png" alt="image-20210514091715754"></p>
<span id="more"></span>

<h2 id="性能监控"><a href="#性能监控" class="headerlink" title="性能监控"></a>性能监控</h2><h3 id="SHOW-PROFILE-分析SQL执行耗时"><a href="#SHOW-PROFILE-分析SQL执行耗时" class="headerlink" title="SHOW PROFILE 分析SQL执行耗时"></a>SHOW PROFILE 分析SQL执行耗时</h3><ol>
<li><p>开启分析</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">set</span> profiling<span class="operator">=</span><span class="number">1</span>;</span><br></pre></td></tr></table></figure></li>
<li><p>运行查询语句</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> <span class="keyword">user</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> category;</span><br></pre></td></tr></table></figure></li>
<li><p>查看查询语句耗时</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">show</span> profiles;</span><br><span class="line"><span class="operator">+</span><span class="comment">----------+------------+------------------------+</span></span><br><span class="line"><span class="operator">|</span> Query_ID <span class="operator">|</span> Duration   <span class="operator">|</span> Query                  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------+------------+------------------------+</span></span><br><span class="line"><span class="operator">|</span>        <span class="number">1</span> <span class="operator">|</span> <span class="number">0.00019575</span> <span class="operator">|</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> <span class="keyword">user</span>     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>        <span class="number">2</span> <span class="operator">|</span> <span class="number">0.00018800</span> <span class="operator">|</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> category <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------+------------+------------------------+</span></span><br></pre></td></tr></table></figure></li>
<li><p>查询单个语句的详细信息</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">show</span> profile <span class="keyword">for</span> query <span class="number">1</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">----------------------+----------+</span></span><br><span class="line"><span class="operator">|</span> Status               <span class="operator">|</span> Duration <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------------+----------+</span></span><br><span class="line"><span class="operator">|</span> starting             <span class="operator">|</span> <span class="number">0.000052</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> checking permissions <span class="operator">|</span> <span class="number">0.000005</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Opening tables       <span class="operator">|</span> <span class="number">0.000014</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> init                 <span class="operator">|</span> <span class="number">0.000014</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="keyword">System</span> lock          <span class="operator">|</span> <span class="number">0.000006</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> optimizing           <span class="operator">|</span> <span class="number">0.000003</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> statistics           <span class="operator">|</span> <span class="number">0.000008</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> preparing            <span class="operator">|</span> <span class="number">0.000006</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> executing            <span class="operator">|</span> <span class="number">0.000002</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Sending data         <span class="operator">|</span> <span class="number">0.000034</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="keyword">end</span>                  <span class="operator">|</span> <span class="number">0.000003</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> query <span class="keyword">end</span>            <span class="operator">|</span> <span class="number">0.000004</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> closing tables       <span class="operator">|</span> <span class="number">0.000006</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> freeing items        <span class="operator">|</span> <span class="number">0.000031</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> cleaning up          <span class="operator">|</span> <span class="number">0.000008</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------------+----------+</span></span><br></pre></td></tr></table></figure></li>
<li><p>查看sql相关的所有分析【主要看i/o与cpu】</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">show</span> profile <span class="keyword">all</span> <span class="keyword">for</span> query <span class="number">1</span> \G;</span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">             Status: starting</span><br><span class="line">           Duration: <span class="number">0.000052</span></span><br><span class="line">           CPU_user: <span class="number">0.000000</span></span><br><span class="line">         CPU_system: <span class="number">0.000000</span></span><br><span class="line">  Context_voluntary: <span class="keyword">NULL</span></span><br><span class="line">Context_involuntary: <span class="keyword">NULL</span></span><br><span class="line">       Block_ops_in: <span class="keyword">NULL</span></span><br><span class="line">      Block_ops_out: <span class="keyword">NULL</span></span><br><span class="line">      Messages_sent: <span class="keyword">NULL</span></span><br><span class="line">  Messages_received: <span class="keyword">NULL</span></span><br><span class="line">  Page_faults_major: <span class="keyword">NULL</span></span><br><span class="line">  Page_faults_minor: <span class="keyword">NULL</span></span><br><span class="line">              Swaps: <span class="keyword">NULL</span></span><br><span class="line">    Source_function: <span class="keyword">NULL</span></span><br><span class="line">        Source_file: <span class="keyword">NULL</span></span><br><span class="line">        Source_line: <span class="keyword">NULL</span></span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">2.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">             Status: checking permissions</span><br><span class="line">           Duration: <span class="number">0.000005</span></span><br><span class="line">           CPU_user: <span class="number">0.000000</span></span><br><span class="line">         CPU_system: <span class="number">0.000000</span></span><br><span class="line">  Context_voluntary: <span class="keyword">NULL</span></span><br><span class="line">Context_involuntary: <span class="keyword">NULL</span></span><br><span class="line">       Block_ops_in: <span class="keyword">NULL</span></span><br><span class="line">      Block_ops_out: <span class="keyword">NULL</span></span><br><span class="line">      Messages_sent: <span class="keyword">NULL</span></span><br><span class="line">  Messages_received: <span class="keyword">NULL</span></span><br><span class="line">  Page_faults_major: <span class="keyword">NULL</span></span><br><span class="line">  Page_faults_minor: <span class="keyword">NULL</span></span><br><span class="line">              Swaps: <span class="keyword">NULL</span></span><br><span class="line">    Source_function: <span class="operator">&lt;</span><span class="literal">unknown</span><span class="operator">&gt;</span></span><br><span class="line">        Source_file: sql_parse.cc</span><br><span class="line">        Source_line: <span class="number">5266</span></span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">3.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">             Status: Opening tables</span><br><span class="line">           Duration: <span class="number">0.000014</span></span><br><span class="line">           CPU_user: <span class="number">0.000000</span></span><br><span class="line">         CPU_system: <span class="number">0.000000</span></span><br><span class="line">  Context_voluntary: <span class="keyword">NULL</span></span><br><span class="line">Context_involuntary: <span class="keyword">NULL</span></span><br><span class="line">       Block_ops_in: <span class="keyword">NULL</span></span><br><span class="line">      Block_ops_out: <span class="keyword">NULL</span></span><br><span class="line">      Messages_sent: <span class="keyword">NULL</span></span><br><span class="line">  Messages_received: <span class="keyword">NULL</span></span><br><span class="line">  Page_faults_major: <span class="keyword">NULL</span></span><br><span class="line">  Page_faults_minor: <span class="keyword">NULL</span></span><br><span class="line">              Swaps: <span class="keyword">NULL</span></span><br><span class="line">    Source_function: <span class="operator">&lt;</span><span class="literal">unknown</span><span class="operator">&gt;</span></span><br><span class="line">        Source_file: sql_base.cc</span><br><span class="line">        Source_line: <span class="number">5018</span></span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">4.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">             Status: init</span><br><span class="line">           Duration: <span class="number">0.000014</span></span><br><span class="line">           CPU_user: <span class="number">0.000000</span></span><br><span class="line">         CPU_system: <span class="number">0.000000</span></span><br><span class="line">  Context_voluntary: <span class="keyword">NULL</span></span><br><span class="line">Context_involuntary: <span class="keyword">NULL</span></span><br><span class="line">       Block_ops_in: <span class="keyword">NULL</span></span><br><span class="line">      Block_ops_out: <span class="keyword">NULL</span></span><br><span class="line">      Messages_sent: <span class="keyword">NULL</span></span><br><span class="line">  Messages_received: <span class="keyword">NULL</span></span><br><span class="line">  Page_faults_major: <span class="keyword">NULL</span></span><br><span class="line">  Page_faults_minor: <span class="keyword">NULL</span></span><br><span class="line">              Swaps: <span class="keyword">NULL</span></span><br><span class="line">    Source_function: <span class="operator">&lt;</span><span class="literal">unknown</span><span class="operator">&gt;</span></span><br><span class="line">        Source_file: sql_select.cc</span><br><span class="line">        Source_line: <span class="number">1050</span></span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">5.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">             Status: <span class="keyword">System</span> lock</span><br><span class="line">           Duration: <span class="number">0.000006</span></span><br><span class="line">           CPU_user: <span class="number">0.000000</span></span><br><span class="line">         CPU_system: <span class="number">0.000000</span></span><br><span class="line">  Context_voluntary: <span class="keyword">NULL</span></span><br><span class="line">Context_involuntary: <span class="keyword">NULL</span></span><br><span class="line">       Block_ops_in: <span class="keyword">NULL</span></span><br><span class="line">      Block_ops_out: <span class="keyword">NULL</span></span><br><span class="line">      Messages_sent: <span class="keyword">NULL</span></span><br><span class="line">  Messages_received: <span class="keyword">NULL</span></span><br><span class="line">  Page_faults_major: <span class="keyword">NULL</span></span><br><span class="line">  Page_faults_minor: <span class="keyword">NULL</span></span><br><span class="line">              Swaps: <span class="keyword">NULL</span></span><br><span class="line">    Source_function: <span class="operator">&lt;</span><span class="literal">unknown</span><span class="operator">&gt;</span></span><br><span class="line">        Source_file: lock.cc</span><br><span class="line">        Source_line: <span class="number">304</span></span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">6.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">             Status: optimizing</span><br><span class="line">           Duration: <span class="number">0.000003</span></span><br><span class="line">           CPU_user: <span class="number">0.000000</span></span><br><span class="line">         CPU_system: <span class="number">0.000000</span></span><br><span class="line">  Context_voluntary: <span class="keyword">NULL</span></span><br><span class="line">Context_involuntary: <span class="keyword">NULL</span></span><br><span class="line">       Block_ops_in: <span class="keyword">NULL</span></span><br><span class="line">      Block_ops_out: <span class="keyword">NULL</span></span><br><span class="line">      Messages_sent: <span class="keyword">NULL</span></span><br><span class="line">  Messages_received: <span class="keyword">NULL</span></span><br><span class="line">  Page_faults_major: <span class="keyword">NULL</span></span><br><span class="line">  Page_faults_minor: <span class="keyword">NULL</span></span><br><span class="line">              Swaps: <span class="keyword">NULL</span></span><br><span class="line">    Source_function: <span class="operator">&lt;</span><span class="literal">unknown</span><span class="operator">&gt;</span></span><br><span class="line">        Source_file: sql_optimizer.cc</span><br><span class="line">        Source_line: <span class="number">138</span></span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">7.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">             Status: statistics</span><br><span class="line">           Duration: <span class="number">0.000008</span></span><br><span class="line">           CPU_user: <span class="number">0.000000</span></span><br><span class="line">         CPU_system: <span class="number">0.000000</span></span><br><span class="line">  Context_voluntary: <span class="keyword">NULL</span></span><br><span class="line">Context_involuntary: <span class="keyword">NULL</span></span><br><span class="line">       Block_ops_in: <span class="keyword">NULL</span></span><br><span class="line">      Block_ops_out: <span class="keyword">NULL</span></span><br><span class="line">      Messages_sent: <span class="keyword">NULL</span></span><br><span class="line">  Messages_received: <span class="keyword">NULL</span></span><br><span class="line">  Page_faults_major: <span class="keyword">NULL</span></span><br><span class="line">  Page_faults_minor: <span class="keyword">NULL</span></span><br><span class="line">              Swaps: <span class="keyword">NULL</span></span><br><span class="line">    Source_function: <span class="operator">&lt;</span><span class="literal">unknown</span><span class="operator">&gt;</span></span><br><span class="line">        Source_file: sql_optimizer.cc</span><br><span class="line">        Source_line: <span class="number">362</span></span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">8.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">             Status: preparing</span><br><span class="line">           Duration: <span class="number">0.000006</span></span><br><span class="line">           CPU_user: <span class="number">0.000000</span></span><br><span class="line">         CPU_system: <span class="number">0.000000</span></span><br><span class="line">  Context_voluntary: <span class="keyword">NULL</span></span><br><span class="line">Context_involuntary: <span class="keyword">NULL</span></span><br><span class="line">       Block_ops_in: <span class="keyword">NULL</span></span><br><span class="line">      Block_ops_out: <span class="keyword">NULL</span></span><br><span class="line">      Messages_sent: <span class="keyword">NULL</span></span><br><span class="line">  Messages_received: <span class="keyword">NULL</span></span><br><span class="line">  Page_faults_major: <span class="keyword">NULL</span></span><br><span class="line">  Page_faults_minor: <span class="keyword">NULL</span></span><br><span class="line">              Swaps: <span class="keyword">NULL</span></span><br><span class="line">    Source_function: <span class="operator">&lt;</span><span class="literal">unknown</span><span class="operator">&gt;</span></span><br><span class="line">        Source_file: sql_optimizer.cc</span><br><span class="line">        Source_line: <span class="number">485</span></span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">9.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">             Status: executing</span><br><span class="line">           Duration: <span class="number">0.000002</span></span><br><span class="line">           CPU_user: <span class="number">0.000000</span></span><br><span class="line">         CPU_system: <span class="number">0.000000</span></span><br><span class="line">  Context_voluntary: <span class="keyword">NULL</span></span><br><span class="line">Context_involuntary: <span class="keyword">NULL</span></span><br><span class="line">       Block_ops_in: <span class="keyword">NULL</span></span><br><span class="line">      Block_ops_out: <span class="keyword">NULL</span></span><br><span class="line">      Messages_sent: <span class="keyword">NULL</span></span><br><span class="line">  Messages_received: <span class="keyword">NULL</span></span><br><span class="line">  Page_faults_major: <span class="keyword">NULL</span></span><br><span class="line">  Page_faults_minor: <span class="keyword">NULL</span></span><br><span class="line">              Swaps: <span class="keyword">NULL</span></span><br><span class="line">    Source_function: <span class="operator">&lt;</span><span class="literal">unknown</span><span class="operator">&gt;</span></span><br><span class="line">        Source_file: sql_executor.cc</span><br><span class="line">        Source_line: <span class="number">110</span></span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">10.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">             Status: Sending data</span><br><span class="line">           Duration: <span class="number">0.000034</span></span><br><span class="line">           CPU_user: <span class="number">0.000000</span></span><br><span class="line">         CPU_system: <span class="number">0.000000</span></span><br><span class="line">  Context_voluntary: <span class="keyword">NULL</span></span><br><span class="line">Context_involuntary: <span class="keyword">NULL</span></span><br><span class="line">       Block_ops_in: <span class="keyword">NULL</span></span><br><span class="line">      Block_ops_out: <span class="keyword">NULL</span></span><br><span class="line">      Messages_sent: <span class="keyword">NULL</span></span><br><span class="line">  Messages_received: <span class="keyword">NULL</span></span><br><span class="line">  Page_faults_major: <span class="keyword">NULL</span></span><br><span class="line">  Page_faults_minor: <span class="keyword">NULL</span></span><br><span class="line">              Swaps: <span class="keyword">NULL</span></span><br><span class="line">    Source_function: <span class="operator">&lt;</span><span class="literal">unknown</span><span class="operator">&gt;</span></span><br><span class="line">        Source_file: sql_executor.cc</span><br><span class="line">        Source_line: <span class="number">190</span></span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">11.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">             Status: <span class="keyword">end</span></span><br><span class="line">           Duration: <span class="number">0.000003</span></span><br><span class="line">           CPU_user: <span class="number">0.000000</span></span><br><span class="line">         CPU_system: <span class="number">0.000000</span></span><br><span class="line">  Context_voluntary: <span class="keyword">NULL</span></span><br><span class="line">Context_involuntary: <span class="keyword">NULL</span></span><br><span class="line">       Block_ops_in: <span class="keyword">NULL</span></span><br><span class="line">      Block_ops_out: <span class="keyword">NULL</span></span><br><span class="line">      Messages_sent: <span class="keyword">NULL</span></span><br><span class="line">  Messages_received: <span class="keyword">NULL</span></span><br><span class="line">  Page_faults_major: <span class="keyword">NULL</span></span><br><span class="line">  Page_faults_minor: <span class="keyword">NULL</span></span><br><span class="line">              Swaps: <span class="keyword">NULL</span></span><br><span class="line">    Source_function: <span class="operator">&lt;</span><span class="literal">unknown</span><span class="operator">&gt;</span></span><br><span class="line">        Source_file: sql_select.cc</span><br><span class="line">        Source_line: <span class="number">1105</span></span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">12.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">             Status: query <span class="keyword">end</span></span><br><span class="line">           Duration: <span class="number">0.000004</span></span><br><span class="line">           CPU_user: <span class="number">0.000000</span></span><br><span class="line">         CPU_system: <span class="number">0.000000</span></span><br><span class="line">  Context_voluntary: <span class="keyword">NULL</span></span><br><span class="line">Context_involuntary: <span class="keyword">NULL</span></span><br><span class="line">       Block_ops_in: <span class="keyword">NULL</span></span><br><span class="line">      Block_ops_out: <span class="keyword">NULL</span></span><br><span class="line">      Messages_sent: <span class="keyword">NULL</span></span><br><span class="line">  Messages_received: <span class="keyword">NULL</span></span><br><span class="line">  Page_faults_major: <span class="keyword">NULL</span></span><br><span class="line">  Page_faults_minor: <span class="keyword">NULL</span></span><br><span class="line">              Swaps: <span class="keyword">NULL</span></span><br><span class="line">    Source_function: <span class="operator">&lt;</span><span class="literal">unknown</span><span class="operator">&gt;</span></span><br><span class="line">        Source_file: sql_parse.cc</span><br><span class="line">        Source_line: <span class="number">4965</span></span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">13.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">             Status: closing tables</span><br><span class="line">           Duration: <span class="number">0.000006</span></span><br><span class="line">           CPU_user: <span class="number">0.000000</span></span><br><span class="line">         CPU_system: <span class="number">0.000000</span></span><br><span class="line">  Context_voluntary: <span class="keyword">NULL</span></span><br><span class="line">Context_involuntary: <span class="keyword">NULL</span></span><br><span class="line">       Block_ops_in: <span class="keyword">NULL</span></span><br><span class="line">      Block_ops_out: <span class="keyword">NULL</span></span><br><span class="line">      Messages_sent: <span class="keyword">NULL</span></span><br><span class="line">  Messages_received: <span class="keyword">NULL</span></span><br><span class="line">  Page_faults_major: <span class="keyword">NULL</span></span><br><span class="line">  Page_faults_minor: <span class="keyword">NULL</span></span><br><span class="line">              Swaps: <span class="keyword">NULL</span></span><br><span class="line">    Source_function: <span class="operator">&lt;</span><span class="literal">unknown</span><span class="operator">&gt;</span></span><br><span class="line">        Source_file: sql_parse.cc</span><br><span class="line">        Source_line: <span class="number">5013</span></span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">14.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">             Status: freeing items</span><br><span class="line">           Duration: <span class="number">0.000031</span></span><br><span class="line">           CPU_user: <span class="number">0.000000</span></span><br><span class="line">         CPU_system: <span class="number">0.000000</span></span><br><span class="line">  Context_voluntary: <span class="keyword">NULL</span></span><br><span class="line">Context_involuntary: <span class="keyword">NULL</span></span><br><span class="line">       Block_ops_in: <span class="keyword">NULL</span></span><br><span class="line">      Block_ops_out: <span class="keyword">NULL</span></span><br><span class="line">      Messages_sent: <span class="keyword">NULL</span></span><br><span class="line">  Messages_received: <span class="keyword">NULL</span></span><br><span class="line">  Page_faults_major: <span class="keyword">NULL</span></span><br><span class="line">  Page_faults_minor: <span class="keyword">NULL</span></span><br><span class="line">              Swaps: <span class="keyword">NULL</span></span><br><span class="line">    Source_function: <span class="operator">&lt;</span><span class="literal">unknown</span><span class="operator">&gt;</span></span><br><span class="line">        Source_file: sql_parse.cc</span><br><span class="line">        Source_line: <span class="number">6404</span></span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">15.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">             Status: cleaning up</span><br><span class="line">           Duration: <span class="number">0.000008</span></span><br><span class="line">           CPU_user: <span class="number">0.000000</span></span><br><span class="line">         CPU_system: <span class="number">0.000000</span></span><br><span class="line">  Context_voluntary: <span class="keyword">NULL</span></span><br><span class="line">Context_involuntary: <span class="keyword">NULL</span></span><br><span class="line">       Block_ops_in: <span class="keyword">NULL</span></span><br><span class="line">      Block_ops_out: <span class="keyword">NULL</span></span><br><span class="line">      Messages_sent: <span class="keyword">NULL</span></span><br><span class="line">  Messages_received: <span class="keyword">NULL</span></span><br><span class="line">  Page_faults_major: <span class="keyword">NULL</span></span><br><span class="line">  Page_faults_minor: <span class="keyword">NULL</span></span><br><span class="line">              Swaps: <span class="keyword">NULL</span></span><br><span class="line">    Source_function: <span class="operator">&lt;</span><span class="literal">unknown</span><span class="operator">&gt;</span></span><br><span class="line">        Source_file: sql_parse.cc</span><br><span class="line">        Source_line: <span class="number">1772</span></span><br></pre></td></tr></table></figure></li>
<li><p>关闭分析</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">set</span> profiling<span class="operator">=</span><span class="number">1</span>;</span><br></pre></td></tr></table></figure></li>
</ol>
<h3 id="MySQL-Performance-Schema"><a href="#MySQL-Performance-Schema" class="headerlink" title="MySQL Performance Schema"></a>MySQL Performance Schema</h3><p>详细可以查看<a href="https://dev.mysql.com/doc/refman/8.0/en/performance-schema.html">官方文档</a></p>
<h3 id="查看线程连接个数-SHOW-PROCESSLIST"><a href="#查看线程连接个数-SHOW-PROCESSLIST" class="headerlink" title="查看线程连接个数 SHOW PROCESSLIST"></a>查看线程连接个数 SHOW PROCESSLIST</h3><figure class="highlight gherkin"><table><tr><td class="code"><pre><span class="line">+----+------+-----------------+----------+---------+------+-------+------------------+</span><br><span class="line">|<span class="string"> Id </span>|<span class="string"> User </span>|<span class="string"> Host            </span>|<span class="string"> db       </span>|<span class="string"> Command </span>|<span class="string"> Time </span>|<span class="string"> State </span>|<span class="string"> Info             </span>|</span><br><span class="line">+----+------+-----------------+----------+---------+------+-------+------------------+</span><br><span class="line">|<span class="string"> 45 </span>|<span class="string"> root </span>|<span class="string"> localhost:11156 </span>|<span class="string"> bugstack </span>|<span class="string"> Sleep   </span>|<span class="string">  210 </span>|<span class="string">       </span>|<span class="string"> NULL             </span>|</span><br><span class="line">|<span class="string"> 46 </span>|<span class="string"> root </span>|<span class="string"> localhost:13537 </span>|<span class="string"> NULL     </span>|<span class="string"> Query   </span>|<span class="string">    0 </span>|<span class="string"> init  </span>|<span class="string"> show processlist </span>|</span><br><span class="line">+----+------+-----------------+----------+---------+------+-------+------------------+</span><br></pre></td></tr></table></figure>

<ul>
<li>id：表示session id</li>
<li>user：表示操作的用户</li>
<li>host：表示操作的主机</li>
<li>db：表示操作的数据库</li>
<li>command：表示命令类型</li>
<li>info：表示详细的sql语句</li>
<li>time：表示相应命令执行时间</li>
<li>state：表示命令执行状态</li>
</ul>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>RocketMQ（一）</title>
    <url>/2021/05/17/RocketMQ%EF%BC%88%E4%B8%80%EF%BC%89/</url>
    <content><![CDATA[<h2 id="主要内容"><a href="#主要内容" class="headerlink" title="主要内容"></a>主要内容</h2><ul>
<li>编译安装</li>
<li>HelloWorld</li>
</ul>
<h3 id="官方网站"><a href="#官方网站" class="headerlink" title="官方网站"></a>官方网站</h3><p><a href="http://rocketmq.apache.org/">http://rocketmq.apache.org/</a></p>
<h3 id="Github"><a href="#Github" class="headerlink" title="Github"></a>Github</h3><p><a href="https://github.com/apache/rocketmq">https://github.com/apache/rocketmq</a></p>
<span id="more"></span>



<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="在-Linux-上安装-JDK"><a href="#在-Linux-上安装-JDK" class="headerlink" title="在 Linux 上安装 JDK"></a>在 Linux 上安装 JDK</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yum search jdk</span><br><span class="line"></span><br><span class="line">yum install java-1.8.0-openjdk.x86_64</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 找到安装位置</span></span><br><span class="line">java -verbose</span><br><span class="line"></span><br><span class="line">[Loaded java.lang.Shutdown from /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.292.b10-1.el7_9.x86_64/jre/lib/rt.jar]</span><br><span class="line">[Loaded java.lang.Shutdown$Lock from /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.292.b10-1.el7_9.x86_64/jre/lib/rt.jar]</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 配置 JAVA_HOME</span></span><br><span class="line">vim /etc/profile</span><br></pre></td></tr></table></figure>

<h3 id="在-Linux-上安装-Maven"><a href="#在-Linux-上安装-Maven" class="headerlink" title="在 Linux 上安装 Maven"></a>在 Linux 上安装 Maven</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 下载压缩包</span></span><br><span class="line">wget https://mirrors.tuna.tsinghua.edu.cn/apache/maven/maven-3/3.6.3/binaries/apache-maven-3.6.3-bin.tar.gz</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 解压</span></span><br><span class="line">tar -zxvf apache-maven-3.6.3-bin.tar.gz</span><br><span class="line"></span><br><span class="line">mv apache-maven-3.6.3 /usr/local/</span><br><span class="line"></span><br><span class="line">vim /usr/local/apache-maven-3.6.3/conf/settings.xml</span><br><span class="line">   &lt;mirror&gt;</span><br><span class="line">      &lt;id&gt;aliyun-maven&lt;/id&gt;</span><br><span class="line">      &lt;mirrorOf&gt;*&lt;/mirrorOf&gt;</span><br><span class="line">      &lt;name&gt;aliyun maven&lt;/name&gt;</span><br><span class="line">      &lt;url&gt;http://maven.aliyun.com/nexus/content/groups/public&lt;/url&gt;</span><br><span class="line">    &lt;/mirror&gt;</span><br><span class="line">    </span><br><span class="line">vim /etc/profile</span><br><span class="line">export MAVEN_HOME=/usr/local/apache-maven-3.6.3</span><br><span class="line">export PATH=$PATH:$MAVEN_HAOM/bin</span><br><span class="line"></span><br><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure>

<h3 id="安装-RocketMQ"><a href="#安装-RocketMQ" class="headerlink" title="安装 RocketMQ"></a>安装 RocketMQ</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget https://mirrors.tuna.tsinghua.edu.cn/apache/rocketmq/4.8.0/rocketmq-all-4.8.0-source-release.zip</span><br><span class="line"></span><br><span class="line">unzip rocketmq-all-4.8.0-source-release.zip</span><br><span class="line"></span><br><span class="line">mvn -Prelease-all -DskipTests clean install -U</span><br><span class="line"></span><br><span class="line"># 启动</span><br><span class="line">./mqnamesrv</span><br><span class="line">./mqbroker</span><br><span class="line"></span><br><span class="line"># 测试</span><br><span class="line">./tools.sh org.apache.rocketmq.example.quickstart.Producer</span><br></pre></td></tr></table></figure>

<p>若遇到错误：linux No compiler is provided in this environment. Perhaps you are running on a JRE rather than a JDK，则执行以下命令</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yum install java-devel</span><br></pre></td></tr></table></figure>

<p>启动报错：Native memory allocation (mmap) failed to map 2147483648 bytes for committing reserved memory</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vim /usr/local/rocketmq-4.8.0/bin/runserver.sh</span><br><span class="line">vim /usr/local/rocketmq-4.8.0/bin/runbroker.sh</span><br><span class="line"></span><br><span class="line">JAVA_OPT=&quot;$&#123;JAVA_OPT&#125; -server -Xms4g -Xmx4g -Xmn2g -XX:MetaspaceSize=128m -XX:MaxMetaspaceSize=320m&quot;</span><br><span class="line"><span class="meta">#</span><span class="bash"> 改为</span></span><br><span class="line">JAVA_OPT=&quot;$&#123;JAVA_OPT&#125; -server -Xms256m -Xmx256m -Xmn128m -XX:MetaspaceSize=128m -XX:MaxMetaspaceSize=320m&quot;</span><br></pre></td></tr></table></figure>

<p>测试报错：connect to null failed</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vim tools.sh</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 放在 JVM Configuration 之前</span></span><br><span class="line">export NAMESRV_ADDR=localhost:9876</span><br></pre></td></tr></table></figure>

<p>测试报错：org.apache.rocketmq.client.exception.MQClientException: No route info of this topic: TopicTest</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 启动broker指定连接的ip：port</span></span><br><span class="line">./mqbroker -n localhost:9876</span><br></pre></td></tr></table></figure>

<h3 id="控制台rocketmq-console编译安装"><a href="#控制台rocketmq-console编译安装" class="headerlink" title="控制台rocketmq-console编译安装"></a>控制台rocketmq-console编译安装</h3><h4 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h4><p><a href="https://github.com/apache/rocketmq-externals">github仓库</a></p>
<h4 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mvn clean package -Dmaven.test.skip=true</span><br></pre></td></tr></table></figure>

<h4 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">java -jar rocketmq-console-ng-2.0.0.jar --rocketmq.config.namesrvAddr=172.17.0.2:9876</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>algorithm</category>
      </categories>
      <tags>
        <tag>RocketMQ</tag>
      </tags>
  </entry>
  <entry>
    <title>Tags Testing Article</title>
    <url>/2021/05/11/Tags-Testing-Article/</url>
    <content><![CDATA[<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;Hello World!&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/xyq-material/blog/master/LeetCode/20210512131715.png" alt="逸"></p>
]]></content>
      <tags>
        <tag>Testing</tag>
        <tag>Another Tag</tag>
      </tags>
  </entry>
  <entry>
    <title>线段点最多覆盖问题</title>
    <url>/2021/05/19/%E7%AE%97%E6%B3%95%E9%A2%98-%E7%BA%BF%E6%AE%B5%E7%82%B9%E6%9C%80%E5%A4%9A%E8%A6%86%E7%9B%96/</url>
    <content><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><ol>
<li>给定一个有序数组 arr ，代表坐落在 X 轴上的点</li>
<li>给定一个正数K，代表绳子的长度</li>
<li>返回绳子最多压中几个点，即使绳子边缘处被盖住了也算盖住</li>
</ol>
<span id="more"></span>

<h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><ol>
<li>采用左右指针，指针为数组下标</li>
<li>右指针 - 左指针 = 当前覆盖点数</li>
<li>右指针指向的值 - 左指针指向的值代表坐落在 X 轴上的点的跨度，要小于对于绳子长度</li>
</ol>
<h2 id="解"><a href="#解" class="headerlink" title="解"></a>解</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">mySolution</span><span class="params">(<span class="keyword">int</span>[] arr, <span class="keyword">int</span> l)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> left = <span class="number">0</span>, right = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> max = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (left &lt; arr.length) &#123;</span><br><span class="line">        <span class="keyword">while</span> (right &lt; arr.length &amp;&amp; arr[right] - arr[left] &lt;= l) &#123;</span><br><span class="line">            right++;</span><br><span class="line">        &#125;</span><br><span class="line">        max = Math.max(max, right - left++);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> max;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>algorithm</category>
      </categories>
      <tags>
        <tag>algorithm</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2021/05/11/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<span id="more"></span>

<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>算法题-查询给定目录下的文件数量</title>
    <url>/2021/05/19/%E7%AE%97%E6%B3%95%E9%A2%98-%E6%9F%A5%E8%AF%A2%E7%BB%99%E5%AE%9A%E7%9B%AE%E5%BD%95%E4%B8%8B%E7%9A%84%E6%96%87%E4%BB%B6%E6%95%B0%E9%87%8F/</url>
    <content><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><ol>
<li>给定一个文件目录的路径，写一个函数统计这个目录下的所有文件</li>
<li>隐藏文件也算，但是文件夹不算</li>
</ol>
<span id="more"></span>

<h2 id="解答"><a href="#解答" class="headerlink" title="解答"></a>解答</h2><h3 id="栈"><a href="#栈" class="headerlink" title="栈"></a>栈</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">getFileNumber</span><span class="params">(String folderPath)</span> </span>&#123;</span><br><span class="line">    File root = <span class="keyword">new</span> File(folderPath);</span><br><span class="line">    <span class="keyword">if</span> (!root.isDirectory() &amp;&amp; !root.isFile()) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (root.isFile()) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    Stack&lt;File&gt; stack = <span class="keyword">new</span> Stack&lt;&gt;();</span><br><span class="line">    stack.add(root);</span><br><span class="line">    <span class="keyword">int</span> files = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (!stack.isEmpty()) &#123;</span><br><span class="line">        File folder = stack.pop();</span><br><span class="line">        <span class="keyword">for</span> (File next : folder.listFiles()) &#123;</span><br><span class="line">            <span class="keyword">if</span> (next.isFile()) &#123;</span><br><span class="line">                files++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (next.isDirectory()) &#123;</span><br><span class="line">                stack.push(next);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> files;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="递归"><a href="#递归" class="headerlink" title="递归"></a>递归</h3><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> mySolution(String path) &#123;</span><br><span class="line">    <span class="keyword">int</span> fileNumber = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">File</span> <span class="keyword">file</span> = <span class="keyword">new</span> <span class="keyword">File</span>(path);</span><br><span class="line">    <span class="keyword">if</span> (!<span class="keyword">file</span>.exists()) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">file</span>.isFile()) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">file</span>.isDirectory()) &#123;</span><br><span class="line">        <span class="keyword">File</span>[] files = <span class="keyword">file</span>.listFiles();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">File</span> f : files) &#123;</span><br><span class="line">            fileNumber = fileNumber + mySolution(f.getPath());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> fileNumber;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>algorithm</category>
      </categories>
      <tags>
        <tag>algorithm</tag>
      </tags>
  </entry>
  <entry>
    <title>系统调用的大致过程</title>
    <url>/2021/05/13/%E7%B3%BB%E7%BB%9F%E8%B0%83%E7%94%A8%E7%9A%84%E5%A4%A7%E8%87%B4%E8%BF%87%E7%A8%8B/</url>
    <content><![CDATA[<h2 id="名词解释"><a href="#名词解释" class="headerlink" title="名词解释"></a>名词解释</h2><h3 id="系统调用"><a href="#系统调用" class="headerlink" title="系统调用"></a>系统调用</h3><p>操作系统(operating system)内核中有一组实现系统功能的代码，系统调用就是对上述代码的调用。程序利用系统调用，向OS提出服务请求，由OS代为完成。</p>
<h3 id="中断"><a href="#中断" class="headerlink" title="中断"></a>中断</h3><p>中断是一种使CPU中止正在执行的程序而转去处理特殊事件的操作，这些引起中断的事件称为中断源，它们可能是来自外设的输入输出请求，也可能是计算机的一些异常事故或其它内部原因。</p>
<span id="more"></span>

<h2 id="系统调用过程"><a href="#系统调用过程" class="headerlink" title="系统调用过程"></a>系统调用过程</h2><ol>
<li>触发中断：硬件或软件发出中断请求（电信号），要求CPU暂停当前工作转手处理更重要的事情。</li>
<li>查询中断向量表：通过中断传来的参数 <em>int 0x80</em>，在 kernel 里的中断向量表中找到对应方法</li>
<li>切换用户态到内核态：保护现场，切换用户态到内核态</li>
<li>执行对应方法</li>
</ol>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>system call</tag>
      </tags>
  </entry>
  <entry>
    <title>自定义动态代理与JDK动态代理</title>
    <url>/2021/05/13/%E5%B0%8F%E7%AA%A5JDK%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86/</url>
    <content><![CDATA[<h2 id="什么是动态代理"><a href="#什么是动态代理" class="headerlink" title="什么是动态代理"></a>什么是动态代理</h2><p>动态代理是在运行期利用 <em>JVM</em> 的反射机制生成代理类，可以在不需要知道具体被代理类的情况下编写代理规则，能避免因大量使用静态代理造成的类的急剧膨胀。</p>
<span id="more"></span>

<h2 id="自定义动态代理"><a href="#自定义动态代理" class="headerlink" title="自定义动态代理"></a>自定义动态代理</h2><h3 id="MyProxy"><a href="#MyProxy" class="headerlink" title="MyProxy"></a>MyProxy</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.custom.proxy;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.tools.JavaCompiler;</span><br><span class="line"><span class="keyword">import</span> javax.tools.StandardJavaFileManager;</span><br><span class="line"><span class="keyword">import</span> javax.tools.ToolProvider;</span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileWriter;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Constructor;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyProxy</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String Ln = <span class="string">&quot;\r\n&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String Tab = <span class="string">&quot;\t&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title">newProxyInstance</span><span class="params">(MyClassLoader loader,</span></span></span><br><span class="line"><span class="params"><span class="function">                                          Class&lt;?&gt;[] interfaceName,</span></span></span><br><span class="line"><span class="params"><span class="function">                                          MyInvocationHandler h)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//1、动态生成一个.java的源文件</span></span><br><span class="line">        String proxy = generateCode(interfaceName);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//2、把生成的这个.java源文件保存在磁盘上</span></span><br><span class="line">        String filePath = MyProxy.class.getResource(<span class="string">&quot;&quot;</span>).getPath();</span><br><span class="line">        File file = <span class="keyword">new</span> File(filePath + <span class="string">&quot;$Proxy0.java&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (!file.exists())&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                file.createNewFile();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        FileWriter fileWriter = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            fileWriter = <span class="keyword">new</span> FileWriter(file);</span><br><span class="line">            fileWriter.write(proxy);</span><br><span class="line">            fileWriter.flush();</span><br><span class="line"></span><br><span class="line">            <span class="comment">//3、把这个.java源文件编译成.class文件</span></span><br><span class="line">            <span class="comment">// 创建一个java文件编译器对象</span></span><br><span class="line">            JavaCompiler compiler = ToolProvider.getSystemJavaCompiler();</span><br><span class="line">            <span class="comment">// java源代码文件管理器</span></span><br><span class="line">            StandardJavaFileManager fileManager = compiler.getStandardFileManager(<span class="keyword">null</span>, <span class="keyword">null</span>, <span class="keyword">null</span>);</span><br><span class="line">            <span class="comment">// java源文件的一个迭代器对象</span></span><br><span class="line">            Iterable iterable = fileManager.getJavaFileObjects(file);</span><br><span class="line">            <span class="comment">// 获取一个编译的任务</span></span><br><span class="line">            JavaCompiler.CompilationTask task = compiler.getTask(<span class="keyword">null</span>, fileManager, <span class="keyword">null</span>, <span class="keyword">null</span>, <span class="keyword">null</span>, iterable);</span><br><span class="line">            <span class="comment">// 执行编译</span></span><br><span class="line">            task.call();</span><br><span class="line">            <span class="comment">// 关闭文件管理器</span></span><br><span class="line">            fileManager.close();</span><br><span class="line"></span><br><span class="line">            <span class="comment">//4、把编译后的.class文件加载到jvm内存中</span></span><br><span class="line">            Class clazz = loader.findClass(<span class="string">&quot;$Proxy0&quot;</span>);</span><br><span class="line">            </span><br><span class="line"><span class="comment">//			  不采用自定义ClassLoader的方式加载</span></span><br><span class="line"><span class="comment">//            URLClassLoader urlClassLoader = new URLClassLoader(new URL[]&#123;new URL(&quot;file:D:\\ideawork\\MySpring\\SpringDemo\\proxyCustom\\target\\classes&quot;)&#125;);</span></span><br><span class="line"><span class="comment">//            Class clazz = urlClassLoader.loadClass(&quot;com.custom.proxy.$Proxy0&quot;);</span></span><br><span class="line">            <span class="comment">//5、根据加载到jvm中的.class字节码文件生成Class类，然后创建Class类的对象</span></span><br><span class="line">            Constructor constructor = clazz.getConstructor(MyInvocationHandler.class);</span><br><span class="line">            <span class="keyword">return</span> constructor.newInstance(h);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                fileWriter.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">generateCode</span><span class="params">(Class&lt;?&gt;[] interfances)</span> </span>&#123;</span><br><span class="line">        StringBuffer sb = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">        sb.append(<span class="string">&quot;package com.custom.proxy;&quot;</span> + Ln);</span><br><span class="line">        sb.append(<span class="string">&quot;import java.lang.reflect.Method;&quot;</span> + Ln);</span><br><span class="line">        sb.append(<span class="string">&quot;import com.custom.proxy.MyInvocationHandler;&quot;</span> + Ln);</span><br><span class="line">        sb.append(<span class="string">&quot;public class $Proxy0 implements &quot;</span> + interfances[<span class="number">0</span>].getName() + <span class="string">&quot;&#123;&quot;</span> + Ln);</span><br><span class="line">        sb.append(Tab + <span class="string">&quot;private MyInvocationHandler h;&quot;</span> + Ln);</span><br><span class="line">        sb.append(Tab + <span class="string">&quot;public $Proxy0(MyInvocationHandler h)&#123;&quot;</span> + Ln);</span><br><span class="line">        sb.append(Tab + Tab + <span class="string">&quot;this.h = h;&quot;</span> + Ln);</span><br><span class="line">        sb.append(Tab + <span class="string">&quot;&#125;&quot;</span> + Ln);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (Method m : interfances[<span class="number">0</span>].getMethods()) &#123;</span><br><span class="line">            sb.append(Tab + <span class="string">&quot;public &quot;</span> + m.getReturnType().getName() + <span class="string">&quot; &quot;</span> + m.getName() + <span class="string">&quot;() &#123;&quot;</span> + Ln);</span><br><span class="line">            sb.append(Tab + Tab + <span class="string">&quot;try &#123;&quot;</span> + Ln);</span><br><span class="line">            sb.append(Tab + Tab + Tab + <span class="string">&quot;Method m = &quot;</span> + interfances[<span class="number">0</span>].getName() + <span class="string">&quot;.class.getMethod(\&quot;&quot;</span> + m.getName() + <span class="string">&quot;\&quot;);&quot;</span> + Ln);</span><br><span class="line">            sb.append(Tab + Tab + Tab + <span class="string">&quot;h.invoke(this, m, null);&quot;</span> + Ln);</span><br><span class="line"><span class="comment">//            sb.append(Tab + Tab + Tab + &quot;return (&quot; + m.getReturnType().getName() + &quot;)h.invoke(this, m, null);&quot; + Ln);</span></span><br><span class="line">            sb.append(Tab + Tab + <span class="string">&quot;&#125; catch (Throwable e) &#123;&quot;</span> + Ln);</span><br><span class="line">            sb.append(Tab + Tab + Tab + <span class="string">&quot;e.printStackTrace();&quot;</span> + Ln);</span><br><span class="line">            sb.append(Tab + Tab + <span class="string">&quot;&#125;&quot;</span> + Ln);</span><br><span class="line">            sb.append(Tab + <span class="string">&quot;&#125;&quot;</span> + Ln);</span><br><span class="line">            sb.append(<span class="string">&quot;&#125;&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> sb.toString();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="MyClassLoader"><a href="#MyClassLoader" class="headerlink" title="MyClassLoader"></a>MyClassLoader</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.custom.proxy;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.ByteArrayOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 自定义一个类加载器</span></span><br><span class="line"><span class="comment"> * bootstrap ClassLoader  --jdk/jre/目录下的jar包加载</span></span><br><span class="line"><span class="comment"> * ext ClassLoader  --jdk/ext/目录下的jar包加载</span></span><br><span class="line"><span class="comment"> * App ClassLoader  --我们应用的ClassLoader</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyClassLoader</span> <span class="keyword">extends</span> <span class="title">ClassLoader</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> File classPathFile;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyClassLoader</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        String classPath = MyClassLoader.class.getResource(<span class="string">&quot;&quot;</span>).getPath();</span><br><span class="line">        <span class="keyword">this</span>.classPathFile = <span class="keyword">new</span> File(classPath);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Class&lt;?&gt; findClass(String name) <span class="keyword">throws</span> ClassNotFoundException &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (classPathFile != <span class="keyword">null</span>) &#123;</span><br><span class="line">            File classFile = <span class="keyword">new</span> File(classPathFile + <span class="string">&quot;\\&quot;</span> + name.replace(<span class="string">&quot;\\.&quot;</span>, <span class="string">&quot;/&quot;</span>) + <span class="string">&quot;.class&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (classFile.exists()) &#123;</span><br><span class="line">                FileInputStream fis = <span class="keyword">null</span>;</span><br><span class="line">                ByteArrayOutputStream bos = <span class="keyword">null</span>;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    fis = <span class="keyword">new</span> FileInputStream(classFile);</span><br><span class="line">                    <span class="keyword">byte</span>[] bytes = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">4096</span>];</span><br><span class="line">                    bos = <span class="keyword">new</span> ByteArrayOutputStream();</span><br><span class="line">                    <span class="keyword">int</span> len;</span><br><span class="line">                    <span class="keyword">while</span> ((len = fis.read(bytes)) != -<span class="number">1</span>) &#123;</span><br><span class="line">                        bos.write(bytes, <span class="number">0</span>, len);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">return</span> defineClass(<span class="keyword">null</span>, bos.toByteArray(), <span class="number">0</span>, bos.size());</span><br><span class="line">                &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        fis.close();</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                        e.printStackTrace();</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        bos.close();</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                        e.printStackTrace();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="MyInvocationHandler"><a href="#MyInvocationHandler" class="headerlink" title="MyInvocationHandler"></a>MyInvocationHandler</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.custom.proxy;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">MyInvocationHandler</span> </span>&#123;</span><br><span class="line">    <span class="function">Object <span class="title">invoke</span><span class="params">(Object proxy, Method method, Object[] args)</span> <span class="keyword">throws</span> Throwable</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h2 id="JDK动态代理源码分析"><a href="#JDK动态代理源码分析" class="headerlink" title="JDK动态代理源码分析"></a>JDK动态代理源码分析</h2><h3 id="Object-proxy-Proxy-newProxyInstance"><a href="#Object-proxy-Proxy-newProxyInstance" class="headerlink" title="Object proxy = Proxy.newProxyInstance(..);"></a>Object proxy = Proxy.newProxyInstance(..);</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@CallerSensitive</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title">newProxyInstance</span><span class="params">(ClassLoader loader,</span></span></span><br><span class="line"><span class="params"><span class="function">                                         Class&lt;?&gt;[] interfaces,</span></span></span><br><span class="line"><span class="params"><span class="function">                                         InvocationHandler h)</span></span></span><br><span class="line"><span class="function">       <span class="keyword">throws</span> IllegalArgumentException</span></span><br><span class="line"><span class="function">   </span>&#123;</span><br><span class="line">       Objects.requireNonNull(h);</span><br><span class="line"></span><br><span class="line">       <span class="keyword">final</span> Class&lt;?&gt;[] intfs = interfaces.clone();</span><br><span class="line">       <span class="keyword">final</span> SecurityManager sm = System.getSecurityManager();</span><br><span class="line">       <span class="keyword">if</span> (sm != <span class="keyword">null</span>) &#123;</span><br><span class="line">           checkProxyAccess(Reflection.getCallerClass(), loader, intfs);</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       <span class="comment">/*</span></span><br><span class="line"><span class="comment">        * 查找或生成指定的代理类</span></span><br><span class="line"><span class="comment">        * Look up or generate the designated proxy class.</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">       Class&lt;?&gt; cl = getProxyClass0(loader, intfs);</span><br><span class="line"></span><br><span class="line">       <span class="comment">/*</span></span><br><span class="line"><span class="comment">        * 使用指定的调用处理程序调用其构造函数</span></span><br><span class="line"><span class="comment">        * Invoke its constructor with the designated invocation handler.</span></span><br><span class="line"><span class="comment">        * 解释：将使用者写的InvacationHandler h 作为构造函数的参数传给代理对象</span></span><br><span class="line"><span class="comment">        * 		代理对象调用h.invoke()方法实现对target的代理和方法的增强</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">       <span class="keyword">try</span> &#123;</span><br><span class="line">           <span class="keyword">if</span> (sm != <span class="keyword">null</span>) &#123;</span><br><span class="line">               <span class="comment">//检查创建代理类所需的权限</span></span><br><span class="line">               checkNewProxyPermission(Reflection.getCallerClass(), cl);</span><br><span class="line">           &#125;</span><br><span class="line"></span><br><span class="line">           <span class="keyword">final</span> Constructor&lt;?&gt; cons = cl.getConstructor(constructorParams);</span><br><span class="line">           <span class="keyword">final</span> InvocationHandler ih = h;</span><br><span class="line">           <span class="keyword">if</span> (!Modifier.isPublic(cl.getModifiers())) &#123;</span><br><span class="line">               AccessController.doPrivileged(<span class="keyword">new</span> PrivilegedAction&lt;Void&gt;() &#123;</span><br><span class="line">                   <span class="function"><span class="keyword">public</span> Void <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                       cons.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">                       <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">                   &#125;</span><br><span class="line">               &#125;);</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">return</span> cons.newInstance(<span class="keyword">new</span> Object[]&#123;h&#125;);</span><br><span class="line">       &#125; <span class="keyword">catch</span> (IllegalAccessException|InstantiationException e) &#123;</span><br><span class="line">           <span class="keyword">throw</span> <span class="keyword">new</span> InternalError(e.toString(), e);</span><br><span class="line">       &#125; <span class="keyword">catch</span> (InvocationTargetException e) &#123;</span><br><span class="line">           Throwable t = e.getCause();</span><br><span class="line">           <span class="keyword">if</span> (t <span class="keyword">instanceof</span> RuntimeException) &#123;</span><br><span class="line">               <span class="keyword">throw</span> (RuntimeException) t;</span><br><span class="line">           &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">               <span class="keyword">throw</span> <span class="keyword">new</span> InternalError(t.toString(), t);</span><br><span class="line">           &#125;</span><br><span class="line">       &#125; <span class="keyword">catch</span> (NoSuchMethodException e) &#123;</span><br><span class="line">           <span class="keyword">throw</span> <span class="keyword">new</span> InternalError(e.toString(), e);</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>

<h3 id="Class-lt-gt-cl-getProxyClass0-loader-intfs"><a href="#Class-lt-gt-cl-getProxyClass0-loader-intfs" class="headerlink" title="Class&lt;?&gt; cl = getProxyClass0(loader, intfs);"></a>Class&lt;?&gt; cl = getProxyClass0(loader, intfs);</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 生成代理类。在调用之前必须调用checkProxyAccess方法来执行权限检查</span></span><br><span class="line"><span class="comment">    * Generate a proxy class.  Must call the checkProxyAccess method</span></span><br><span class="line"><span class="comment">    * to perform permission checks before calling this.</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">static</span> Class&lt;?&gt; getProxyClass0(ClassLoader loader,</span><br><span class="line">                                          Class&lt;?&gt;... interfaces) &#123;</span><br><span class="line">       <span class="keyword">if</span> (interfaces.length &gt; <span class="number">65535</span>) &#123;</span><br><span class="line">           <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">&quot;interface limit exceeded&quot;</span>);</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       <span class="comment">// If the proxy class defined by the given loader implementing</span></span><br><span class="line">       <span class="comment">// the given interfaces exists, this will simply return the cached copy;</span></span><br><span class="line">       <span class="comment">// otherwise, it will create the proxy class via the ProxyClassFactory</span></span><br><span class="line">       <span class="comment">// 简单所就是有缓存读缓存，没缓存就生成</span></span><br><span class="line">       <span class="keyword">return</span> proxyClassCache.get(loader, interfaces);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>

<h3 id="proxyClassCache-get-loader-interfaces"><a href="#proxyClassCache-get-loader-interfaces" class="headerlink" title="proxyClassCache.get(loader, interfaces);"></a>proxyClassCache.get(loader, interfaces);</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">    * Look-up the value through the cache. This always evaluates the</span></span><br><span class="line"><span class="comment">    * &#123;<span class="doctag">@code</span> subKeyFactory&#125; function and optionally evaluates</span></span><br><span class="line"><span class="comment">    * &#123;<span class="doctag">@code</span> valueFactory&#125; function if there is no entry in the cache for given</span></span><br><span class="line"><span class="comment">    * pair of (key, subKey) or the entry has already been cleared.</span></span><br><span class="line"><span class="comment">    *</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> key       possibly null key</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> parameter parameter used together with key to create sub-key and</span></span><br><span class="line"><span class="comment">    *                  value (should not be null)</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span> the cached value (never null)</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@throws</span> NullPointerException if &#123;<span class="doctag">@code</span> parameter&#125; passed in or</span></span><br><span class="line"><span class="comment">    *                              &#123;<span class="doctag">@code</span> sub-key&#125; calculated by</span></span><br><span class="line"><span class="comment">    *                              &#123;<span class="doctag">@code</span> subKeyFactory&#125; or &#123;<span class="doctag">@code</span> value&#125;</span></span><br><span class="line"><span class="comment">    *                              calculated by &#123;<span class="doctag">@code</span> valueFactory&#125; is null.</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> V <span class="title">get</span><span class="params">(K key, P parameter)</span> </span>&#123;</span><br><span class="line">       Objects.requireNonNull(parameter);</span><br><span class="line"></span><br><span class="line">       expungeStaleEntries();</span><br><span class="line"></span><br><span class="line">       Object cacheKey = CacheKey.valueOf(key, refQueue);</span><br><span class="line"></span><br><span class="line">       <span class="comment">// lazily install the 2nd level valuesMap for the particular cacheKey</span></span><br><span class="line">       ConcurrentMap&lt;Object, Supplier&lt;V&gt;&gt; valuesMap = map.get(cacheKey);</span><br><span class="line">       <span class="keyword">if</span> (valuesMap == <span class="keyword">null</span>) &#123;</span><br><span class="line">           ConcurrentMap&lt;Object, Supplier&lt;V&gt;&gt; oldValuesMap</span><br><span class="line">               = map.putIfAbsent(cacheKey,</span><br><span class="line">                                 valuesMap = <span class="keyword">new</span> ConcurrentHashMap&lt;&gt;());</span><br><span class="line">           <span class="keyword">if</span> (oldValuesMap != <span class="keyword">null</span>) &#123;</span><br><span class="line">               valuesMap = oldValuesMap;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       <span class="comment">// create subKey and retrieve the possible Supplier&lt;V&gt; stored by that</span></span><br><span class="line">       <span class="comment">// subKey from valuesMap</span></span><br><span class="line">       Object subKey = Objects.requireNonNull(subKeyFactory.apply(key, parameter));</span><br><span class="line">       Supplier&lt;V&gt; supplier = valuesMap.get(subKey);</span><br><span class="line">       Factory factory = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">       <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">           <span class="keyword">if</span> (supplier != <span class="keyword">null</span>) &#123;</span><br><span class="line">               <span class="comment">// supplier might be a Factory or a CacheValue&lt;V&gt; instance</span></span><br><span class="line">               <span class="comment">// 这一步为获得代理对象的Class</span></span><br><span class="line">               V value = supplier.get();</span><br><span class="line">               <span class="keyword">if</span> (value != <span class="keyword">null</span>) &#123;</span><br><span class="line">                   <span class="keyword">return</span> value;</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="comment">// else no supplier in cache</span></span><br><span class="line">           <span class="comment">// or a supplier that returned null (could be a cleared CacheValue</span></span><br><span class="line">           <span class="comment">// or a Factory that wasn&#x27;t successful in installing the CacheValue)</span></span><br><span class="line"></span><br><span class="line">           <span class="comment">// lazily construct a Factory</span></span><br><span class="line">           <span class="keyword">if</span> (factory == <span class="keyword">null</span>) &#123;</span><br><span class="line">               factory = <span class="keyword">new</span> Factory(key, parameter, subKey, valuesMap);</span><br><span class="line">           &#125;</span><br><span class="line"></span><br><span class="line">           <span class="keyword">if</span> (supplier == <span class="keyword">null</span>) &#123;</span><br><span class="line">               supplier = valuesMap.putIfAbsent(subKey, factory);</span><br><span class="line">               <span class="keyword">if</span> (supplier == <span class="keyword">null</span>) &#123;</span><br><span class="line">                   <span class="comment">// successfully installed Factory</span></span><br><span class="line">                   supplier = factory;</span><br><span class="line">               &#125;</span><br><span class="line">               <span class="comment">// else retry with winning supplier</span></span><br><span class="line">           &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">               <span class="keyword">if</span> (valuesMap.replace(subKey, supplier, factory)) &#123;</span><br><span class="line">                   <span class="comment">// successfully replaced</span></span><br><span class="line">                   <span class="comment">// cleared CacheEntry / unsuccessful Factory</span></span><br><span class="line">                   <span class="comment">// with our Factory</span></span><br><span class="line">                   supplier = factory;</span><br><span class="line">               &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                   <span class="comment">// retry with current supplier</span></span><br><span class="line">                   supplier = valuesMap.get(subKey);</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>

<h3 id="V-value-supplier-get"><a href="#V-value-supplier-get" class="headerlink" title="V value = supplier.get();"></a>V value = supplier.get();</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">   <span class="comment">//WeakCache的内部类</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">Factory</span> <span class="keyword">implements</span> <span class="title">Supplier</span>&lt;<span class="title">V</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">       <span class="keyword">private</span> <span class="keyword">final</span> K key;</span><br><span class="line">       <span class="keyword">private</span> <span class="keyword">final</span> P parameter;</span><br><span class="line">       <span class="keyword">private</span> <span class="keyword">final</span> Object subKey;</span><br><span class="line">       <span class="keyword">private</span> <span class="keyword">final</span> ConcurrentMap&lt;Object, Supplier&lt;V&gt;&gt; valuesMap;</span><br><span class="line"></span><br><span class="line">       Factory(K key, P parameter, Object subKey,</span><br><span class="line">               ConcurrentMap&lt;Object, Supplier&lt;V&gt;&gt; valuesMap) &#123;</span><br><span class="line">           <span class="keyword">this</span>.key = key;</span><br><span class="line">           <span class="keyword">this</span>.parameter = parameter;</span><br><span class="line">           <span class="keyword">this</span>.subKey = subKey;</span><br><span class="line">           <span class="keyword">this</span>.valuesMap = valuesMap;</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       <span class="meta">@Override</span></span><br><span class="line">       <span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> V <span class="title">get</span><span class="params">()</span> </span>&#123; <span class="comment">// serialize access</span></span><br><span class="line">           <span class="comment">// re-check</span></span><br><span class="line">           Supplier&lt;V&gt; supplier = valuesMap.get(subKey);</span><br><span class="line">           <span class="keyword">if</span> (supplier != <span class="keyword">this</span>) &#123;</span><br><span class="line">               <span class="comment">// something changed while we were waiting:</span></span><br><span class="line">               <span class="comment">// might be that we were replaced by a CacheValue</span></span><br><span class="line">               <span class="comment">// or were removed because of failure -&gt;</span></span><br><span class="line">               <span class="comment">// return null to signal WeakCache.get() to retry</span></span><br><span class="line">               <span class="comment">// the loop</span></span><br><span class="line">               <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="comment">// else still us (supplier == this)</span></span><br><span class="line"></span><br><span class="line">           <span class="comment">// create new value</span></span><br><span class="line">           V value = <span class="keyword">null</span>;</span><br><span class="line">           <span class="keyword">try</span> &#123;</span><br><span class="line">               <span class="comment">//Objects.requireNonNull()只是判断是否非空</span></span><br><span class="line">               <span class="comment">//valueFactory.apply(key, parameter)中key为类加载器，parameter为接口的类对象</span></span><br><span class="line">               value = Objects.requireNonNull(valueFactory.apply(key, parameter));</span><br><span class="line">           &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">               <span class="keyword">if</span> (value == <span class="keyword">null</span>) &#123; <span class="comment">// remove us on failure</span></span><br><span class="line">                   valuesMap.remove(subKey, <span class="keyword">this</span>);</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="comment">// the only path to reach here is with non-null value</span></span><br><span class="line">           <span class="keyword">assert</span> value != <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">           <span class="comment">// wrap value with CacheValue (WeakReference)</span></span><br><span class="line">           CacheValue&lt;V&gt; cacheValue = <span class="keyword">new</span> CacheValue&lt;&gt;(value);</span><br><span class="line"></span><br><span class="line">           <span class="comment">// put into reverseMap</span></span><br><span class="line">           reverseMap.put(cacheValue, Boolean.TRUE);</span><br><span class="line"></span><br><span class="line">           <span class="comment">// try replacing us with CacheValue (this should always succeed)</span></span><br><span class="line">           <span class="keyword">if</span> (!valuesMap.replace(subKey, <span class="keyword">this</span>, cacheValue)) &#123;</span><br><span class="line">               <span class="keyword">throw</span> <span class="keyword">new</span> AssertionError(<span class="string">&quot;Should not reach here&quot;</span>);</span><br><span class="line">           &#125;</span><br><span class="line"></span><br><span class="line">           <span class="comment">// successfully replaced us with new CacheValue -&gt; return the value</span></span><br><span class="line">           <span class="comment">// wrapped by it</span></span><br><span class="line">           <span class="keyword">return</span> value;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>



<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">    * A factory function that generates, defines and returns the proxy class given</span></span><br><span class="line"><span class="comment">    * the ClassLoader and array of interfaces.</span></span><br><span class="line"><span class="comment">    * 指定类加载器和接口生成代理类.class的工厂</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">ProxyClassFactory</span></span></span><br><span class="line"><span class="class">       <span class="keyword">implements</span> <span class="title">BiFunction</span>&lt;<span class="title">ClassLoader</span>, <span class="title">Class</span>&lt;?&gt;[], <span class="title">Class</span>&lt;?&gt;&gt;</span></span><br><span class="line"><span class="class">   </span>&#123;</span><br><span class="line">       <span class="comment">// prefix for all proxy class names</span></span><br><span class="line">       <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String proxyClassNamePrefix = <span class="string">&quot;$Proxy&quot;</span>;</span><br><span class="line"></span><br><span class="line">       <span class="comment">// next number to use for generation of unique proxy class names</span></span><br><span class="line">       <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> AtomicLong nextUniqueNumber = <span class="keyword">new</span> AtomicLong();</span><br><span class="line"></span><br><span class="line">       <span class="meta">@Override</span></span><br><span class="line">       <span class="keyword">public</span> Class&lt;?&gt; apply(ClassLoader loader, Class&lt;?&gt;[] interfaces) &#123;</span><br><span class="line"></span><br><span class="line">           Map&lt;Class&lt;?&gt;, Boolean&gt; interfaceSet = <span class="keyword">new</span> IdentityHashMap&lt;&gt;(interfaces.length);</span><br><span class="line">           <span class="keyword">for</span> (Class&lt;?&gt; intf : interfaces) &#123;</span><br><span class="line">               <span class="comment">/*</span></span><br><span class="line"><span class="comment">                * Verify that the class loader resolves the name of this</span></span><br><span class="line"><span class="comment">                * interface to the same Class object.</span></span><br><span class="line"><span class="comment">                * 验证类加载器是否解析此接口名到同一个类对象</span></span><br><span class="line"><span class="comment">                */</span></span><br><span class="line">               Class&lt;?&gt; interfaceClass = <span class="keyword">null</span>;</span><br><span class="line">               <span class="keyword">try</span> &#123;</span><br><span class="line">                   interfaceClass = Class.forName(intf.getName(), <span class="keyword">false</span>, loader);</span><br><span class="line">               &#125; <span class="keyword">catch</span> (ClassNotFoundException e) &#123;</span><br><span class="line">               &#125;</span><br><span class="line">               <span class="keyword">if</span> (interfaceClass != intf) &#123;</span><br><span class="line">                   <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(</span><br><span class="line">                       intf + <span class="string">&quot; is not visible from class loader&quot;</span>);</span><br><span class="line">               &#125;</span><br><span class="line">               <span class="comment">/*</span></span><br><span class="line"><span class="comment">                * Verify that the Class object actually represents an</span></span><br><span class="line"><span class="comment">                * interface.</span></span><br><span class="line"><span class="comment">                */</span></span><br><span class="line">               <span class="keyword">if</span> (!interfaceClass.isInterface()) &#123;</span><br><span class="line">                   <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(</span><br><span class="line">                       interfaceClass.getName() + <span class="string">&quot; is not an interface&quot;</span>);</span><br><span class="line">               &#125;</span><br><span class="line">               <span class="comment">/*</span></span><br><span class="line"><span class="comment">                * Verify that this interface is not a duplicate.</span></span><br><span class="line"><span class="comment">                */</span></span><br><span class="line">               <span class="keyword">if</span> (interfaceSet.put(interfaceClass, Boolean.TRUE) != <span class="keyword">null</span>) &#123;</span><br><span class="line">                   <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(</span><br><span class="line">                       <span class="string">&quot;repeated interface: &quot;</span> + interfaceClass.getName());</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br><span class="line"></span><br><span class="line">           String proxyPkg = <span class="keyword">null</span>;     <span class="comment">// package to define proxy class in</span></span><br><span class="line">           <span class="keyword">int</span> accessFlags = Modifier.PUBLIC | Modifier.FINAL;</span><br><span class="line"></span><br><span class="line">           <span class="comment">/*</span></span><br><span class="line"><span class="comment">            * Record the package of a non-public proxy interface so that the</span></span><br><span class="line"><span class="comment">            * proxy class will be defined in the same package.  Verify that</span></span><br><span class="line"><span class="comment">            * all non-public proxy interfaces are in the same package.</span></span><br><span class="line"><span class="comment">            * 记录非公共代理接口所在的包，以便将代理类定义在同一包中</span></span><br><span class="line"><span class="comment">            */</span></span><br><span class="line">           <span class="keyword">for</span> (Class&lt;?&gt; intf : interfaces) &#123;</span><br><span class="line">               <span class="keyword">int</span> flags = intf.getModifiers();</span><br><span class="line">               <span class="keyword">if</span> (!Modifier.isPublic(flags)) &#123;</span><br><span class="line">                   accessFlags = Modifier.FINAL;</span><br><span class="line">                   String name = intf.getName();</span><br><span class="line">                   <span class="keyword">int</span> n = name.lastIndexOf(<span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">                   String pkg = ((n == -<span class="number">1</span>) ? <span class="string">&quot;&quot;</span> : name.substring(<span class="number">0</span>, n + <span class="number">1</span>));</span><br><span class="line">                   <span class="keyword">if</span> (proxyPkg == <span class="keyword">null</span>) &#123;</span><br><span class="line">                       proxyPkg = pkg;</span><br><span class="line">                   &#125; <span class="keyword">else</span> <span class="keyword">if</span> (!pkg.equals(proxyPkg)) &#123;</span><br><span class="line">                       <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(</span><br><span class="line">                           <span class="string">&quot;non-public interfaces from different packages&quot;</span>);</span><br><span class="line">                   &#125;</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br><span class="line"></span><br><span class="line">           <span class="keyword">if</span> (proxyPkg == <span class="keyword">null</span>) &#123;</span><br><span class="line">               <span class="comment">// if no non-public proxy interfaces, use com.sun.proxy package</span></span><br><span class="line">               proxyPkg = ReflectUtil.PROXY_PACKAGE + <span class="string">&quot;.&quot;</span>;</span><br><span class="line">           &#125;</span><br><span class="line"></span><br><span class="line">           <span class="comment">/*</span></span><br><span class="line"><span class="comment">            * Choose a name for the proxy class to generate.</span></span><br><span class="line"><span class="comment">            */</span></span><br><span class="line">           <span class="keyword">long</span> num = nextUniqueNumber.getAndIncrement();</span><br><span class="line">           String proxyName = proxyPkg + proxyClassNamePrefix + num;</span><br><span class="line"></span><br><span class="line">           <span class="comment">/*</span></span><br><span class="line"><span class="comment">            * Generate the specified proxy class.</span></span><br><span class="line"><span class="comment">            */</span></span><br><span class="line">           <span class="comment">//动态生成class的byte数组，通过字符串拼接jvm指令</span></span><br><span class="line">           <span class="keyword">byte</span>[] proxyClassFile = ProxyGenerator.generateProxyClass(</span><br><span class="line">               proxyName, interfaces, accessFlags);</span><br><span class="line">           <span class="keyword">try</span> &#123;</span><br><span class="line">               <span class="comment">//将生成的byte数组加载进jvm，此方法为native方法，由C编写</span></span><br><span class="line">               <span class="keyword">return</span> defineClass0(loader, proxyName,</span><br><span class="line">                                   proxyClassFile, <span class="number">0</span>, proxyClassFile.length);</span><br><span class="line">           &#125; <span class="keyword">catch</span> (ClassFormatError e) &#123;</span><br><span class="line">               <span class="comment">/*</span></span><br><span class="line"><span class="comment">                * A ClassFormatError here means that (barring bugs in the</span></span><br><span class="line"><span class="comment">                * proxy class generation code) there was some other</span></span><br><span class="line"><span class="comment">                * invalid aspect of the arguments supplied to the proxy</span></span><br><span class="line"><span class="comment">                * class creation (such as virtual machine limitations</span></span><br><span class="line"><span class="comment">                * exceeded).</span></span><br><span class="line"><span class="comment">                */</span></span><br><span class="line">               <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(e.toString());</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>

<h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><ul>
<li><p>自定义动态代理：</p>
<p>​    动态拼接字符串生成代理对象的.java文件 -&gt; 将.java文件编译成.class文件 -&gt; 通过类加载器加载.class文件进jvm -&gt; 反射生成代理对象</p>
</li>
<li><p>jdk动态代理：</p>
<p>​    生成.clsss文件的byte[]数组，直接将数组加载进jvm -&gt; 反射生成代理对象</p>
</li>
<li><p>jdk动态代理无需涉及io流，所以比自定义动态代理高效。</p>
</li>
</ul>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>动态代理</tag>
      </tags>
  </entry>
</search>
